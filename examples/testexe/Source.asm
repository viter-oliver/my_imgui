; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.40629.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	main
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+148
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
xdata	SEGMENT
$unwind$main DD	023619H
	DD	0700af211H
	DD	imagerel __GSHandlerCheck
	DD	070H
xdata	ENDS
CONST	SEGMENT
main$rtcName$0 DB 073H
	DB	073H
	DB	073H
	DB	00H
main$rtcName$1 DB 074H
	DB	066H
	DB	064H
	DB	00H
	ORG $+8
main$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:main$rtcName$1
	DD	024H
	DD	04H
	DQ	FLAT:main$rtcName$0
	ORG $+96
main$rtcFrameData DD 02H
	DD	00H
	DQ	FLAT:main$rtcVarDesc
CONST	ENDS
; Function compile flags: /Odtp /RTCsu
; File d:\github\my_imgui\examples\testexe\source.cpp
_TEXT	SEGMENT
sss$ = 36
tfd$ = 72
ptfd$ = 88
fd1$ = 96
__$ArrayPad$ = 112
argc$ = 144
argv$ = 152
main	PROC

; 14   : {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rdi
	sub	rsp, 128				; 00000080H
	mov	rdi, rsp
	mov	ecx, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+144]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 15   : 	//printf("hello world");
; 16   : 	int sss = 0x123456;

	mov	DWORD PTR sss$[rsp], 1193046		; 00123456H

; 17   : 	test_field tfd = { 1, 2, 3, 4, 5, 9 };

	mov	BYTE PTR tfd$[rsp], 1
	mov	DWORD PTR tfd$[rsp+4], 150158		; 00024a8eH

; 18   : 	test_field* ptfd = (test_field* )&sss;

	lea	rax, QWORD PTR sss$[rsp]
	mov	QWORD PTR ptfd$[rsp], rax

; 19   : 	int fd1 = ptfd->fd5;

	mov	rax, QWORD PTR ptfd$[rsp]
	mov	eax, DWORD PTR [rax+4]
	shr	eax, 9
	and	eax, 31
	mov	DWORD PTR fd1$[rsp], eax

; 20   : 	return fd1;

	mov	eax, DWORD PTR fd1$[rsp]

; 21   : }

	mov	edi, eax
	mov	rcx, rsp
	lea	rdx, OFFSET FLAT:main$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 128				; 00000080H
	pop	rdi
	ret	0
main	ENDP
_TEXT	ENDS
END
