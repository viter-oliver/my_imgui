link_libraries(glfw)
link_libraries(freetype)
link_libraries(json_lib)
include_directories(${GLFW_SOURCE_DIR}/include)
include_directories($ENV{PKG_CONFIG_SYSROOT_DIR}/usr/include/freetype2)
#include_directories(${GLFW_SOURCE_DIR}/boost_1_65_1)
include_directories(${GLFW_SOURCE_DIR}/imgui/af_include)
include_directories(${GLFW_SOURCE_DIR}/imgui)
include_directories(${GLFW_SOURCE_DIR}/json_lib)
include_directories(${GLFW_SOURCE_DIR}/freetype)

include_directories(gl3w af_control fab  msgpack-c soil)
if(_GLFW_SCREEN)
if(QNX_VERSION<=660)
add_definitions(-DGLFW_INCLUDE_ES2)
else()
add_definitions(-DGLFW_INCLUDE_ES3)
endif()    
endif()
if(_GLFW_WAYLAND)
add_definitions(-DIMGUI_WAYLAND) 
add_definitions(-DGLFW_INCLUDE_ES3)
endif()
add_definitions(-DIMGUI_DISABLE_DEMO_WINDOWS)

set(IMGUI imgui.cpp imgui_draw.cpp)
file(GLOB AF_CONTROL af_control/*.cpp af_control/*.c)
file(GLOB SOIL soil/*.c)
add_library(imgui_lib ${IMGUI} ${AF_CONTROL} ${SOIL})
MESSAGE(STATUS "arch is $ENV{ARCH}")
IF("$ENV{ARCH}" STREQUAL "arm64")
   MESSAGE(STATUS "this is imx8 platform for imgui")
   set(LIB_OUTPUT_PATH ${GLFW_SOURCE_DIR}/../../arhud/ar_hud/RV/afg_sdk/lib)
   set(LIBRARY_OUTPUT_PATH ${LIB_OUTPUT_PATH})
   ADD_CUSTOM_COMMAND(TARGET imgui_lib POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${LIB_OUTPUT_PATH}/libimgui_lib.a ${GLFW_SOURCE_DIR}/../RV_cluster/afg_sdk/lib)
   #set(LIB_OUTPUT_PATH ${GLFW_SOURCE_DIR}/../../arhud/ar_hud/RV/afg_sdk/lib)
   #set(LIBRARY_OUTPUT_PATH ${GLFW_SOURCE_DIR}/../RV_cluster/afg_sdk/lib)
ELSE()
   MESSAGE(STATUS "this is imx6 platform")
   set(LIBRARY_OUTPUT_PATH ${GLFW_SOURCE_DIR}/../../arhud/ar_hud/e115/afg_sdk/lib)
ENDIF()

set_target_properties(imgui_lib PROPERTIES LINKER_LANGUAGE CXX)
if(_GLFW_SCREEN)
target_link_libraries(imgui_lib EGL GLESv2 m screen)
else(_GLFW_WAYLAND)
target_link_libraries(imgui_lib wayland-client wayland-server wayland-cursor EGL GLESv2 m pthread dl freetype)
endif()
#add_library(imgui_lib ${IMGUI} ${AF_CONTROL} ${SOIL} )
#set_target_properties(imgui_lib PROPERTIES LINKER_LANGUAGE CXX)
#target_link_libraries(imgui_lib wayland-client wayland-server wayland-cursor wayland-egl EGL GLESv2 m pthread dl)
